@model PestControlDll.Entities.Route
@{
    ViewBag.Title = "Map";
}
<head>
    <h2>Map - @Model.Name</h2>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-3 col-sm-4 sidebar1">
                @* Below here is sidebar *@
                <div>
                    
                    <ul id="destinations">
                        @if (Model.Destinations != null)
                        {
                            foreach (var item in Model.Destinations)
                            {
                                <li>
                                    @Html.ActionLink(item.FullAddress, "Worksheet", new { id = item.Id }, null)
                                </li>
                            }
                        }
                    </ul>
                    @Html.ActionLink("No, go back", "Index", new { routeId = Model.Id }, new { @class = "btn btn-default" })

                </div>
            </div>
            <div class="col-md-9 col-sm-8 main-content">
                @* Below here is the main content *@
                <div id="dvMap" style="width: 100%; height: 650px"></div></div>
        </div>
    </div>
</body>


@section scripts
{
    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?key=AIzaSyAIMFJfxLEK2MfCwQUSvqUk92Bd2eApj2o&callback=initMap"></script>
    <script type="text/javascript">
        var markers = [];
        //Adding destinations onto marker array with coordinates

        @foreach(var item in Model.Destinations)
        {
        <Text>
            markers.push({
                "title": '@item.FullAddress',
                "lat": '@item.Lat',
                "lng": '@item.Long',
                "description": '@item.FullAddress'
         });
        </text>
        }
        //Options where the map will start on load.
        window.onload = function() {
            var mapOptions = {
                center: new google.maps.LatLng(markers[0].lat, markers[0].lng),
                zoom: 10,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            //This makes div eith id dvMap a google map.
            var map = new google.maps.Map(document.getElementById("dvMap"), mapOptions);
            //InfoWindow will be used to set information about objects in this case description, namely address
            var infoWindow = new google.maps.InfoWindow();
            //array for latitude and longitude so that later we can draw route between markers.
            var lat_lng = new Array();
            var latlngbounds = new google.maps.LatLngBounds();
            //Loop for adding all the markers in coordinates
            for (i = 0; i < markers.length; i++) {
                //Gets first marker object
                var data = markers[i]
                //Converts it into google maps lat/lng values
                var myLatlng = new google.maps.LatLng(data.lat, data.lng);
                //Adds coordinates to array.
                lat_lng.push(myLatlng);
                //adds marker to map and creates local marker object.
                var marker = new google.maps.Marker({
                    position: myLatlng,
                    map: map,
                    title: data.title
                });
                //For each marker, latlng bounds are extended, so later on, when maps are shown they would show center of the map
                latlngbounds.extend(marker.position);
                (function(marker, data) {
                    //Adding listener on marker, if clicked displays description
                    google.maps.event.addListener(marker,
                        "click",
                        function(e) {
                            infoWindow.setContent(data.description);
                            infoWindow.open(map, marker);
                        });
                })(marker, data);
            }
            //Sets the map in center of markers.
            map.setCenter(latlngbounds.getCenter());
            map.fitBounds(latlngbounds);

            //***********ROUTING****************//

            //Initialize the Path Array
            var path = new google.maps.MVCArray();

            //Initialize the Direction Service
            var service = new google.maps.DirectionsService();

            //Set the Path Stroke Color
            var poly = new google.maps.Polyline({ map: map, strokeColor: '#4986E7' });

            //Loop and Draw Path Route between the Points on MAP
            for (var i = 0; i < lat_lng.length; i++) {
                if ((i + 1) < lat_lng.length) {
                    var src = lat_lng[i];
                    var des = lat_lng[i + 1];
                    //path.push(src);
                    poly.setPath(path);
                    service.route({
                            origin: src,
                            destination: des,
                            travelMode: google.maps.DirectionsTravelMode.DRIVING
                        },
                        function(result, status) {
                            if (status == google.maps.DirectionsStatus.OK) {
                                for (var i = 0, len = result.routes[0].overview_path.length; i < len; i++) {
                                    path.push(result.routes[0].overview_path[i]);
                                }
                            }
                        });
                }
            }
        }
    </script>
}